# Maintainer: Gadget3000 <gadget3000 at msn dot com>
# Contributor: jimmy-6 <jakub.jarozek at gmail dot com>

pkgname=cogs
pkgver=4
pkgrel=1
pkgdesc="A game in which you build machines from sliding tiles"
arch=('i686' 'x86_64')
url="http://www.cogsgame.com/"
license=('unknown')
depends=('gcc-libs' 'sdl<1.3' 'openal')
makedepends=('unzip' 'imagemagick')
groups=('humblebundle3' 'humblebundle4' 'humblebundles')
source=(cogs.desktop)
md5sums=('a35a1fc9e81e3ab180cc2fe523e5ad43')

_archive="cogs-installer-build${pkgver}"
_archive_md5="dbfb640b494ccaddd0d3553390720ad9"

build() {
  install -Dd ${srcdir}/extractedInstaller
  cd $srcdir

  if [ ! -f ${_cogsarchivelocation}${_archive} ]; then  
	  if [ -n "${_cogsarchivelocation}" ] && [ $(echo ${_cogsarchivelocation} | rev | cut -c 1) != "/" ]; then
                echo _cogsarchivelocation must end in /
                return 1
          fi
	  if [ ! -f ${_archive} ] && [ -n "${_humblebundle3key}" ]; then
		rm -f ${_archive}* index.html\?key\=${_humblebundle3key}*
	        wget http://www.humblebundle.com/?key=${_humblebundle3key}
	        wget $(cat index.html\?key\=${_humblebundle3key} | grep "${_archive}" | cut -d "'" -f 10)
	        mv ${_archive}* ${_archive}
          elif [ ! -f ${_archive} ] && [ -n "${_humblebundle4key}" ]; then
                rm -f ${_archive}* index.html\?key\=${_humblebundle4key}*
                wget http://www.humblebundle.com/?key=${_humblebundle4key}
                wget $(cat index.html\?key\=${_humblebundle4key} | grep "${_archive}" | cut -d "'" -f 10)
                mv ${_archive}* ${_archive}
	  elif [ -z "${_humblebundle3key}" ] && [ -z "${_humblebundle4key}" ]; then
		echo You can now automate the download of the archive using the _humblebundle3key or _humblebundle4key bash variables.
		echo Just add \'export _humblebundle3key\=\<Your key here\>\' and/or
		echo \'export _humblebundle4key\=\<Your key here\>\' to \.bashrc
		echo
		echo Alternatively you can use the _cogsarchivelocation bash variable.
		echo
	        echo Otherwise please just place ${_archive} into $(pwd)/
	        echo Press Enter to continue
	        read -a _unused
	  fi
  fi

  if [ ! -f ${_cogsarchivelocation}${_archive} ]; then
    echo "${_cogsarchivelocation}${_archive} not found!"
    return 1
  fi

  if ! echo "${_archive_md5}  ${_cogsarchivelocation}${_archive}" | md5sum -c --quiet; then
    echo "Invalid checksum for ${_cogsarchivelocation}${_archive}"
    return 1
  fi

  install -Dd ${pkgdir}/opt/
  unzip -qqo ${_cogsarchivelocation}${_archive} -x guis/* meta/* scripts/* -d ${srcdir}/extractedInstaller/ && msg Finished Extracting
  install -Dd ${pkgdir}/opt/cogs
  mv ${srcdir}/extractedInstaller/data/* ${pkgdir}/opt/cogs/

  rm -rf ${pkgdir}/opt/cogs/{x86,amd64}

  #Create launcher
  install -Dd ${pkgdir}/usr/bin
  echo \#\!/bin/bash > ${pkgdir}/usr/bin/cogs
  echo /opt/cogs/Cogs >> ${pkgdir}/usr/bin/cogs
  chmod +x ${pkgdir}/usr/bin/cogs

  if [ "${CARCH}" = "x86_64" ]; then
    rm -rf ${pkgdir}/opt/cogs/Cogs-x86
  else
    rm -rf ${pkgdir}/opt/cogs/Cogs-amd64
  fi

  for i in 16x16 22x22 32x32 48x48 64x64 128x128; do
    mkdir -p ${pkgdir}/usr/share/icons/hicolor/${i}/apps
    convert -resize ${i} \
        ${pkgdir}/opt/cogs/cogs.png \
        ${pkgdir}/usr/share/icons/hicolor/${i}/apps/cogs.png
  done

  # install menu entry
  install -D ${srcdir}/cogs.desktop ${pkgdir}/usr/share/applications/cogs.desktop
}
