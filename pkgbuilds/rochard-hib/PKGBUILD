# Maintainer: Sam S. <smls75@gmail.com>

pkgname=rochard-hib
pkgver=1.32_20121002
_hibver=20121002_1.32
pkgrel=0
pkgdesc='A science fiction platformer game (Humble Bundle version)'
url='http://www.rochardthegame.com'
arch=('i686' 'x86_64')
license=('custom:commercial')
depends=('mesa' 'libxext' 'libxdmcp')
source=('rochard-hib.desktop'
        'http://www.humblebundle.com/6/icons/rochard.png')
md5sums=('e5b2fdfff4732907e3b31b26ef2b1594'
         '043dab659fa3f46cdf5db53b129bdbcc')
PKGEXT='.pkg.tar'

case $CARCH in
    i686)   _arch=32; _archive_subdir="Rochard_x86";;
    x86_64) _arch=64; _archive_subdir="Rochard_x64";;
esac
_archive="rochard-linux-${_hibver}-${_arch}bit.tar.gz"


package() {
  # Get game archive
  _get_humblebundle_source "${_archive}" || {
    error "Unable to find the game archive. Please download it from your Humble
           Bundle page, and place it into one of the above locations."
    exit 1; }

  msg "Starting setup..."
  cd $srcdir

  # Unpack game archive
  [[ -d ${_archive_subdir} ]] && rm -r ${_archive_subdir}
  tar -xvf "${_archive}"

  # Install game files
  install -d "${pkgdir}/opt/Rochard"
  cp -r ${_archive_subdir}/* "${pkgdir}/opt/Rochard"

  # Install launcher script
  echo -e "#!/bin/sh\ncd /opt/Rochard && ./Rochard" > "launcher.sh"
  install -Dm755 "launcher.sh" "${pkgdir}/usr/bin/rochard"

  # Install icon
  install -Dm644 "rochard.png" \
                 "${pkgdir}/usr/share/pixmaps/rochard.png"

  # Install desktop entry
  install -Dm644 "${pkgname}.desktop" \
                 "${pkgdir}/usr/share/applications/${pkgname}.desktop"
}


# Locate a game archive from one of the Humble Bundles, and symlink it into $srcdir
_get_humblebundle_source() {
  _get_local_source "$1" || return 1;
  # TODO: Implement automatic downloading from Humble Bundle site
}

# Locate a file or folder provided by the user, and symlink it into $srcdir
_get_local_source() {
  msg "Looking for '$1'..."
  declare -A _search=(['build dir']="$startdir"
                      ['$LOCAL_PACKAGE_SOURCES']="$LOCAL_PACKAGE_SOURCES")
  for _key in "${!_search[@]}"; do local _dir="${_search["$_key"]}"
    if [ -z "$_dir" ]; then _dir="<undefined>"; fi
    echo -n "    - in $_key ['$_dir'] ... ";
    if [ -e "$_dir/$1" ]; then
      echo "FOUND"; ln -sfT "$(readlink -f "$_dir/$1")" "$srcdir/$1"; break; fi
    echo "NOT FOUND"
  done
  if [ ! -e "$srcdir/$1" ]; then return 1; fi
}
